{"version":3,"file":"line.js","sourceRoot":"","sources":["../../usr/local/google/home/jelbourn/material2/tmp/broccoli_type_script_compiler-input_base_path-oPmWLW1O.tmp/0/src/demo-app/core/line/line.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAMO,eAAe,CAAC,CAAA;AAEvB;;;;GAIG;AAEH;IAAA;IAAqB,CAAC;IADtB;QAAC,gBAAS,CAAC,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC;;cAAA;IAChB,aAAC;AAAD,CAAC,AAAtB,IAAsB;AAAT,cAAM,SAAG,CAAA;AAEtB,oFAAoF;AACpF;IACE,sBAAoB,MAAyB,EAAU,SAAmB,EACtD,QAAoB;QAF1C,iBA2BC;QA1BqB,WAAM,GAAN,MAAM,CAAmB;QAAU,cAAS,GAAT,SAAS,CAAU;QACtD,aAAQ,GAAR,QAAQ,CAAY;QACtC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAEvC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;YAC5B,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAGO,oCAAa,GAArB,UAAsB,KAAa;QACjC,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,SAAS,CAAC,QAAM,KAAK,UAAO,EAAE,IAAI,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IAEO,oCAAa,GAArB;QACE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;IACrC,CAAC;IAEO,gCAAS,GAAjB,UAAkB,SAAiB,EAAE,IAAa;QAChD,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IAC/E,CAAC;IAEH,mBAAC;AAAD,CAAC,AA3BD,IA2BC;AA3BY,oBAAY,eA2BxB,CAAA;AAMD;IAAA;IAA4B,CAAC;IAJ7B;QAAC,eAAQ,CAAC;YACR,OAAO,EAAE,CAAC,MAAM,CAAC;YACjB,YAAY,EAAE,CAAC,MAAM,CAAC;SACvB,CAAC;;oBAAA;IAC0B,mBAAC;AAAD,CAAC,AAA7B,IAA6B;AAAhB,oBAAY,eAAI,CAAA","sourcesContent":["import {\n    NgModule,\n    Directive,\n    Renderer,\n    ElementRef,\n    QueryList\n} from '@angular/core';\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MdLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({ selector: '[md-line]' })\nexport class MdLine {}\n\n/* Helper that takes a query list of lines and sets the correct class on the host */\nexport class MdLineSetter {\n  constructor(private _lines: QueryList<MdLine>, private _renderer: Renderer,\n              private _element: ElementRef) {\n    this._setLineClass(this._lines.length);\n\n    this._lines.changes.subscribe(() => {\n      this._setLineClass(this._lines.length);\n    });\n  }\n\n\n  private _setLineClass(count: number): void {\n    this._resetClasses();\n    if (count === 2 || count === 3) {\n      this._setClass(`md-${count}-line`, true);\n    }\n  }\n\n  private _resetClasses(): void {\n    this._setClass('md-2-line', false);\n    this._setClass('md-3-line', false);\n  }\n\n  private _setClass(className: string, bool: boolean): void {\n    this._renderer.setElementClass(this._element.nativeElement, className, bool);\n  }\n\n}\n\n@NgModule({\n  exports: [MdLine],\n  declarations: [MdLine],\n})\nexport class MdLineModule { }\n"]}