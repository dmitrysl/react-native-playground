{"version":3,"sources":["hero-search.component.ts"],"names":["core_1","require","router_1","Observable_1","Subject_1","hero_search_service_1","HeroSearchComponent","heroSearchService","router","this","searchTerms","Subject","prototype","search","term","next","ngOnInit","_this","heroes","debounceTime","distinctUntilChanged","switchMap","Observable","of","catch","error","console","log","gotoDetail","hero","link","id","navigate","__decorate","Component","selector","templateUrl","styleUrls","providers","HeroSearchService","exports"],"mappings":"sgBAAAA,OAAAC,QAAkC,iBAClCC,SAAAD,QAAkC,mBAClCE,aAAAF,QAAkC,mBAClCG,UAAAH,QAAkC,gBAElCI,sBAAAJ,QAAkC,yBAUlCK,oBAAA,WAII,QAAAA,GACYC,EACAC,GADAC,KAAAF,kBAAAA,EACAE,KAAAD,OAAAA,EAJJC,KAAAC,YAAc,GAAIN,WAAAO,QA+B9B,MAxBIL,GAAAM,UAAAC,OAAA,SAAOC,GACHL,KAAKC,YAAYK,KAAKD,IAG1BR,EAAAM,UAAAI,SAAA,WAAA,GAAAC,GAAAR,IACIA,MAAKS,OAAST,KAAKC,YACdS,aAAa,KACbC,uBACAC,UAAU,SAAAP,GAAQ,MAAAA,GAEbG,EAAKV,kBAAkBM,OAAOC,GAE9BX,aAAAmB,WAAWC,SAChBC,MAAM,SAAAC,GAGH,MADAC,SAAQC,IAAIF,GACLtB,aAAAmB,WAAWC,UAI9BjB,EAAAM,UAAAgB,WAAA,SAAWC,GACP,GAAIC,IAAQ,UAAWD,EAAKE,GAC5BtB,MAAKD,OAAOwB,SAASF,IArC7BxB,EAAA2B,YAACjC,OAAAkC,WACGC,SAAU,cACVC,YAAa,iCACbC,WAAa,iCACbC,WAAYjC,sBAAAkC,qHAEHC,SAAAlC,oBAAmBA","file":"hero-search.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router }            from '@angular/router';\r\nimport { Observable }        from 'rxjs/Observable';\r\nimport { Subject }           from 'rxjs/Subject';\r\n\r\nimport { HeroSearchService } from './hero-search.service';\r\nimport { Hero } from './hero';\r\n\r\n\r\n@Component({\r\n    selector: 'hero-search',\r\n    templateUrl: 'app/hero-search.component.html',\r\n    styleUrls:  ['app/hero-search.component.css'],\r\n    providers: [HeroSearchService]\r\n})\r\nexport class HeroSearchComponent implements OnInit {\r\n    heroes: Observable<Hero[]>;\r\n    private searchTerms = new Subject<string>();\r\n\r\n    constructor(\r\n        private heroSearchService: HeroSearchService,\r\n        private router: Router) {}\r\n\r\n    // Push a search term into the observable stream.\r\n    search(term: string): void {\r\n        this.searchTerms.next(term);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.heroes = this.searchTerms\r\n            .debounceTime(300)        // wait for 300ms pause in events\r\n            .distinctUntilChanged()   // ignore if next search term is same as previous\r\n            .switchMap(term => term   // switch to new observable each time\r\n                // return the http search observable\r\n                ? this.heroSearchService.search(term)\r\n                // or the observable of empty heroes if no search term\r\n                : Observable.of<Hero[]>([]))\r\n            .catch(error => {\r\n                // TODO: real error handling\r\n                console.log(error);\r\n                return Observable.of<Hero[]>([]);\r\n            });\r\n    }\r\n\r\n    gotoDetail(hero: Hero): void {\r\n        let link = ['/detail', hero.id];\r\n        this.router.navigate(link);\r\n    }\r\n}"],"sourceRoot":"/source/"}