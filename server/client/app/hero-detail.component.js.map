{"version":3,"sources":["hero-detail.component.ts"],"names":["core_1","require","router_1","hero_1","hero_service_1","HeroDetailComponent","heroService","route","this","close","EventEmitter","navigated","prototype","ngOnInit","_this","params","forEach","undefined","id","getHero","then","hero","Hero","save","goBack","catch","error","savedHero","emit","window","history","back","__decorate","Input","Output","Component","selector","templateUrl","exports"],"mappings":"sgBAAAA,OAAAC,QAA+D,iBAC/DC,SAAAD,QAAuC,mBAEvCE,OAAAF,QAAqB,UACrBG,eAAAH,QAA4B,kBAO5BI,oBAAA,WAMI,QAAAA,GAAoBC,EAAkCC,GAAlCC,KAAAF,YAAAA,EAAkCE,KAAAD,MAAAA,EAJ5CC,KAAAC,MAAQ,GAAIT,QAAAU,aAEtBF,KAAAG,WAAY,EAmChB,MA9BIN,GAAAO,UAAAC,SAAA,WAAA,GAAAC,GAAAN,IACIA,MAAKD,MAAMQ,OAAOC,QAAQ,SAACD,GACvB,GAAqBE,SAAjBF,EAAW,GAAiB,CAC5B,GAAIG,IAAMH,EAAW,EACrBD,GAAKH,WAAY,EACjBG,EAAKR,YAAYa,QAAQD,GACpBE,KAAK,SAAAC,GAAQ,MAAAP,GAAKO,KAAOA,QAE9BP,GAAKH,WAAY,EACjBG,EAAKO,KAAO,GAAIlB,QAAAmB,QAK5BjB,EAAAO,UAAAW,KAAA,WAAA,GAAAT,GAAAN,IACIA,MAAKF,YACAiB,KAAKf,KAAKa,MACVD,KAAK,SAAAC,GACFP,EAAKO,KAAOA,EACZP,EAAKU,OAAOH,KAEfI,MAAM,SAAAC,GAAS,MAAAZ,GAAKY,MAAQA,KAGrCrB,EAAAO,UAAAY,OAAA,SAAOG,GAAA,SAAAA,IAAAA,EAAA,MACHnB,KAAKC,MAAMmB,KAAKD,GACZnB,KAAKG,WACLkB,OAAOC,QAAQC,QAnCvBC,YAAChC,OAAAiC,0EACDD,YAAChC,OAAAkC,uEANL7B,EAAA2B,YAAChC,OAAAmC,WACCC,SAAU,iBACVC,YAAa,8HAEFC,SAAAjC,oBAAmBA","file":"hero-detail.component.js","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { Hero } from './hero';\r\nimport { HeroService } from './hero.service';\r\n\r\n\r\n@Component({\r\n  selector: 'my-hero-detail',\r\n  templateUrl: 'app/hero-detail.component.html',\r\n})\r\nexport class HeroDetailComponent implements OnInit {\r\n    @Input() hero: Hero;\r\n    @Output() close = new EventEmitter();\r\n    error: any;\r\n    navigated = false; // true if navigated here\r\n\r\n    constructor(private heroService: HeroService, private route: ActivatedRoute) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.route.params.forEach((params: Params) => {\r\n            if (params['id'] !== undefined) {\r\n                let id = +params['id'];\r\n                this.navigated = true;\r\n                this.heroService.getHero(id)\r\n                    .then(hero => this.hero = hero);\r\n            } else {\r\n                this.navigated = false;\r\n                this.hero = new Hero();\r\n            }\r\n        });\r\n    }\r\n\r\n    save(): void {\r\n        this.heroService\r\n            .save(this.hero)\r\n            .then(hero => {\r\n                this.hero = hero; // saved hero, w/ id if new\r\n                this.goBack(hero);\r\n            })\r\n            .catch(error => this.error = error); // TODO: Display error message\r\n    }\r\n\r\n    goBack(savedHero: Hero = null): void {\r\n        this.close.emit(savedHero);\r\n        if (this.navigated) { \r\n            window.history.back(); \r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}