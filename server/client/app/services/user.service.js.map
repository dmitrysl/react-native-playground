{"version":3,"sources":["services/user.service.ts"],"names":["core_1","require","http_1","index_1","UserService","http","authenticationService","this","prototype","getUsers","headers","Headers","X-ACCESS-TOKEN","token","options","RequestOptions","get","map","response","json","__decorate","Injectable","exports"],"mappings":"sgBAAAA,OAAAC,QAA2B,iBAC3BC,OAAAD,QAAwD,iBAGxDE,QAAAF,QAAsC,qBAKtCG,YAAA,WAGI,QAAAA,GACYC,EACAC,GADAC,KAAAF,KAAAA,EACAE,KAAAD,sBAAAA,EAYhB,MATIF,GAAAI,UAAAC,SAAA,WAEI,GAAIC,GAAU,GAAIR,QAAAS,SAAUC,iBAAkBL,KAAKD,sBAAsBO,QACrEC,EAAU,GAAIZ,QAAAa,gBAAiBL,QAASA,GAG5C,OAAOH,MAAKF,KAAKW,IAAI,aAAcF,GAC9BG,IAAI,SAACC,GAAuB,MAAAA,GAASC,UAhBlDf,EAAAgB,YAACpB,OAAAqB,+FACYC,SAAAlB,YAAWA","file":"services/user.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n \nimport { AuthenticationService } from '../services/index';\nimport { User } from '../_models/index';\n\n \n@Injectable()\nexport class UserService {\n    private token: string;\n \n    constructor(\n        private http: Http,\n        private authenticationService: AuthenticationService) {\n    }\n \n    getUsers(): Observable<User[]> {\n        // add authorization header with jwt token\n        let headers = new Headers({ 'X-ACCESS-TOKEN': this.authenticationService.token });\n        let options = new RequestOptions({ headers: headers });\n \n        // get users from api\n        return this.http.get('/api/users', options)\n            .map((response: Response) => response.json());\n    }\n}"],"sourceRoot":"/source/"}