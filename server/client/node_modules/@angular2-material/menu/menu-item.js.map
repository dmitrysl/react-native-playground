{"version":3,"file":"menu-item.js","sourceRoot":"","sources":["../../usr/local/google/home/jelbourn/material2/tmp/broccoli_type_script_compiler-input_base_path-oPmWLW1O.tmp/0/src/demo-app/components/menu/menu-item.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA4C,eAAe,CAAC,CAAA;AAE5D;;;GAGG;AAKH;IAAA;IAAyB,CAAC;IAJ1B;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,IAAI,EAAE,EAAC,MAAM,EAAE,UAAU,EAAC;SAC3B,CAAC;;kBAAA;IACuB,iBAAC;AAAD,CAAC,AAA1B,IAA0B;AAAb,kBAAU,aAAG,CAAA;AAE1B;;;GAGG;AAQH;IAAA;IA6BA,CAAC;IAxBC,sBAAI,kCAAQ;aAAZ;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAED,UAAa,KAAc;YACzB,IAAI,CAAC,SAAS,GAAG,CAAC,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,SAAS,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;QAC1E,CAAC;;;OAJA;IAOD,sBAAI,wCAAc;aAAlB;YACE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/B,CAAC;;;OAAA;IAGD,sBAAI,kCAAQ;aAAZ;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAChC,CAAC;;;OAAA;IAED,oCAAa,GAAb,UAAc,KAAY;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAC1B,CAAC;IACH,CAAC;IAzBD;QAAC,kBAAW,CAAC,eAAe,CAAC;QAC5B,YAAK,EAAE;;gDAAA;IASR;QAAC,kBAAW,CAAC,oBAAoB,CAAC;;sDAAA;IAKlC;QAAC,kBAAW,CAAC,UAAU,CAAC;;gDAAA;IAzB1B;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,IAAI,EAAE;gBACJ,MAAM,EAAE,UAAU;gBAClB,SAAS,EAAE,uBAAuB;aACnC;SACF,CAAC;;oBAAA;IA8BF,mBAAC;AAAD,CAAC,AA7BD,IA6BC;AA7BY,oBAAY,eA6BxB,CAAA","sourcesContent":["import {Directive, Input, HostBinding} from '@angular/core';\n\n/**\n * This directive is intended to be used inside an md-menu tag.\n * It exists mostly to set the role attribute.\n */\n@Directive({\n  selector: 'button[md-menu-item]',\n  host: {'role': 'menuitem'}\n})\nexport class MdMenuItem {}\n\n/**\n * This directive is intended to be used inside an md-menu tag.\n * It sets the role attribute and adds support for the disabled property to anchors.\n */\n@Directive({\n  selector: 'a[md-menu-item]',\n  host: {\n    'role': 'menuitem',\n    '(click)': 'checkDisabled($event)'\n  }\n})\nexport class MdMenuAnchor {\n  _disabled: boolean;\n\n  @HostBinding('attr.disabled')\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(value: boolean) {\n    this._disabled = (value === false || value === undefined) ? null : true;\n  }\n\n  @HostBinding('attr.aria-disabled')\n  get isAriaDisabled(): string {\n    return String(this.disabled);\n  }\n\n  @HostBinding('tabIndex')\n  get tabIndex(): number {\n    return this.disabled ? -1 : 0;\n  }\n\n  checkDisabled(event: Event) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n}\n"]}