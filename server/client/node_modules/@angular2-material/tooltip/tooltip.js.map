{"version":3,"file":"tooltip.js","sourceRoot":"","sources":["../../usr/local/google/home/jelbourn/material2/tmp/broccoli_type_script_compiler-input_base_path-oPmWLW1O.tmp/0/src/demo-app/components/tooltip/tooltip.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    NgModule,\n    Component,\n    ComponentRef,\n    Directive,\n    Input,\n    ElementRef,\n    ViewContainerRef,\n    ChangeDetectorRef\n} from '@angular/core';\nimport {\n  Overlay,\n  OverlayState,\n  OverlayModule,\n  OverlayRef,\n  ComponentPortal,\n  OverlayConnectionPosition,\n  OriginConnectionPosition,\n} from '@angular2-material/core/core';\n\nexport type TooltipPosition = 'before' | 'after' | 'above' | 'below';\n\n@Directive({\n  selector: '[md-tooltip]',\n  host: {\n    '(mouseenter)': '_handleMouseEnter($event)',\n    '(mouseleave)': '_handleMouseLeave($event)',\n  }\n})\nexport class MdTooltip {\n  visible: boolean = false;\n\n  /** Allows the user to define the position of the tooltip relative to the parent element */\n  private _position: TooltipPosition = 'below';\n  @Input('tooltip-position') get position(): TooltipPosition {\n    return this._position;\n  }\n  set position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n      this._createOverlay();\n      this._updatePosition();\n    }\n  }\n\n  /** The message to be displayed in the tooltip */\n  private _message: string;\n  @Input('md-tooltip') get message() {\n    return this._message;\n  }\n  set message(value: string) {\n    this._message = value;\n    this._updatePosition();\n  }\n\n  private _overlayRef: OverlayRef;\n\n  constructor(private _overlay: Overlay, private _elementRef: ElementRef,\n      private _viewContainerRef: ViewContainerRef,\n      private _changeDetectionRef: ChangeDetectorRef) {}\n\n  /** \n   * Create overlay on init\n   * TODO: @internal\n   */\n  ngOnInit() {\n    this._createOverlay();\n  }\n\n  /**\n   * Create the overlay config and position strategy\n   */\n  private _createOverlay() {\n    if (this._overlayRef) {\n      if (this.visible) {\n        // if visible, hide before destroying\n        this.hide().then(() => this._createOverlay());\n      } else {\n        // if not visible, dispose and recreate\n        this._overlayRef.dispose();\n        this._overlayRef = null;\n        this._createOverlay();\n      }\n    } else {\n      let origin = this._getOrigin();\n      let position = this._getOverlayPosition();\n      let strategy = this._overlay.position().connectedTo(this._elementRef, origin, position);\n      let config = new OverlayState();\n      config.positionStrategy = strategy;\n      this._overlay.create(config).then(ref => {\n        this._overlayRef = ref;\n      });\n    }\n  }\n\n  /**\n   * Returns the origin position based on the user's position preference\n   */\n  private _getOrigin(): OriginConnectionPosition {\n    switch (this.position) {\n      case 'before': return { originX: 'start', originY: 'center' };\n      case 'after':  return { originX: 'end', originY: 'center' };\n      case 'above':  return { originX: 'center', originY: 'top' };\n      case 'below':  return { originX: 'center', originY: 'bottom' };\n    }\n  }\n\n  /**\n   * Returns the overlay position based on the user's preference\n   */\n  private _getOverlayPosition(): OverlayConnectionPosition {\n    switch (this.position) {\n      case 'before': return { overlayX: 'end', overlayY: 'center' };\n      case 'after':  return { overlayX: 'start', overlayY: 'center' };\n      case 'above':  return { overlayX: 'center', overlayY: 'bottom' };\n      case 'below':  return { overlayX: 'center', overlayY: 'top' };\n    }\n  }\n\n  /**\n   * Shows the tooltip on mouse enter\n   * @param event\n   */\n  _handleMouseEnter(event: MouseEvent) {\n    this.show();\n  }\n\n  /**\n   * Hides the tooltip on mouse leave\n   * @param event\n   */\n  _handleMouseLeave(event: MouseEvent) {\n    this.hide();\n  }\n\n  /**\n   * Shows the tooltip and returns a promise that will resolve when the tooltip is visible\n   */\n  show(): Promise<any> {\n    if (!this.visible && this._overlayRef && !this._overlayRef.hasAttached()) {\n      this.visible = true;\n      let promise = this._overlayRef.attach(new ComponentPortal(TooltipComponent,\n          this._viewContainerRef));\n      promise.then((ref: ComponentRef<TooltipComponent>) => {\n        ref.instance.message = this.message;\n        this._updatePosition();\n      });\n      return promise;\n    }\n  }\n\n  /**\n   * Hides the tooltip and returns a promise that will resolve when the tooltip is hidden\n   */\n  hide(): Promise<any> {\n    if (this.visible && this._overlayRef && this._overlayRef.hasAttached()) {\n      this.visible = false;\n      return this._overlayRef.detach();\n    }\n  }\n\n  /**\n   * Shows/hides the tooltip and returns a promise that will resolve when it is done\n   */\n  toggle(): Promise<any> {\n    if (this.visible) {\n      return this.hide();\n    } else {\n      return this.show();\n    }\n  }\n\n  /**\n   * Updates the tooltip's position\n   */\n  private _updatePosition() {\n    if (this._overlayRef) {\n      this._changeDetectionRef.detectChanges();\n      this._overlayRef.updatePosition();\n    }\n  }\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'md-tooltip-component',\n  template: `<div class=\"md-tooltip\">{{message}}</div>`,\n  styleUrls: ['tooltip.css'],\n})\nexport class TooltipComponent {\n  message: string;\n}\n\n/** @deprecated */\nexport const MD_TOOLTIP_DIRECTIVES = [MdTooltip];\n\n\n@NgModule({\n  imports: [OverlayModule],\n  exports: [MD_TOOLTIP_DIRECTIVES, TooltipComponent],\n  declarations: [MD_TOOLTIP_DIRECTIVES, TooltipComponent],\n  entryComponents: [TooltipComponent],\n})\nexport class MdTooltipModule { }\n"]}